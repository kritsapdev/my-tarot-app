import streamlit as st
import google.generativeai as genai
import os
from dotenv import load_dotenv

# --- ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ---
load_dotenv()
# ‡∏î‡∏∂‡∏á API Key: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å Streamlit Secrets ‡∏Å‡πà‡∏≠‡∏ô, ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å .env (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Local)
try:
    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Streamlit Cloud
    GOOGLE_API_KEY = st.secrets["GOOGLE_API_KEY"]
except KeyError:
    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Local Environment
    GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

genai.configure(api_key=GOOGLE_API_KEY)


# --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• (‡πÉ‡∏ä‡πâ Cache ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß) ---
@st.cache_resource
def load_model():
    return genai.GenerativeModel('gemini-2.5-flash')

model = load_model()

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ---
st.set_page_config(page_title="‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡∏´‡∏°‡∏≠‡∏î‡∏π‡πÑ‡∏û‡πà‡∏¢‡∏¥‡∏õ‡∏ã‡∏µ", page_icon="üîÆ")
st.title("üîÆ ‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡∏´‡∏°‡∏≠‡∏î‡∏π‡πÑ‡∏û‡πà‡∏¢‡∏¥‡∏õ‡∏ã‡∏µ")
st.write("‡∏•‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö AI ‡∏´‡∏°‡∏≠‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤")

user_question = st.text_input("‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏¥:")

if st.button("‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°"):
    if user_question:
        st.info(f"‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠: {user_question}")
        
        # --- ‡πÉ‡∏ä‡πâ Spinner ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î ---
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢... ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‚è≥"):
            # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏õ‡πÉ‡∏´‡πâ AI
            response = model.generate_content(user_question)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å AI
            st.markdown(response.text)
    else:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏î‡∏™‡πà‡∏á")